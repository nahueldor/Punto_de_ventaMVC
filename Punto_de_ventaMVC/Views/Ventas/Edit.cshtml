@model Punto_de_ventaMVC.Views.ViewsModels.FacturaEditVM
@using System.Text.Json

@{
    ViewData["Title"] = "Edit";

    var clientesList = ViewData["Clientes"] as List<SelectListItem> ?? new List<SelectListItem>();
    var usuariosList = ViewData["Usuarios"] as List<SelectListItem> ?? new List<SelectListItem>();
    var productos = ViewData["Producto"] as List<SelectListItem> ?? new List<SelectListItem>();

    var detallesJson = JsonSerializer.Serialize(Model.Detalles);
    var productoJson = JsonSerializer.Serialize(Model.Productos);
}

<h1>Editar venta</h1>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit" method="post" lang="en">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <input type="hidden" asp-for="venta.id_factura" />*@
            <input type="hidden" name="Model.venta.id_factura" value="@Model.venta.id_factura" id="id_factura" />

            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label asp-for="venta.numero" class="control-label"></label>
                        <input class="form-control" name="Model.venta.numero" value="@Model.venta.numero" />
                        <span asp-validation-for="venta.numero" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.cliente" class="control-label"></label>
                        @* <input asp-for="cliente" class="form-control" /> *@
                        <div class="input-group">
                            <select name="Model.venta.cliente" class="form-select" id="cliente" required>

                                @foreach (var c in clientesList)
                                {
                                    <option value="@c.Value">@c.Text</option>
                                }
                            </select>
                        </div>
                        <span asp-validation-for="venta.cliente" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.usuario" class="control-label"></label>
                        @* <input asp-for="usuario" class="form-control" /> *@
                        <select name="Model.venta.usuario" class="form-select" id="usuario" required>

                            @foreach (var u in usuariosList)
                            {
                                <option value="@u.Value">@u.Text</option>
                            }
                        </select>
                        <span asp-validation-for="venta.usuario" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.fecha_facturacion" class="control-label"></label>
                        <input class="form-control" name="Model.venta.fecha_facturacion" value="@Model.venta.fecha_facturacion" />
                        <span asp-validation-for="venta.fecha_facturacion" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.subtotal" class="control-label"></label>
                        <input class="form-control" name="Model.venta.subtotal" id="subtotal" value="@Model.venta.subtotal" step="0.01" min="0" type="number" readonly />
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.isv" class="control-label"></label>
                        <input class="form-control" name="Model.venta.isv" id="isv" value="@Model.venta.isv" step="0.01" min="0" type="number" readonly />
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.descuento" class="control-label">Descuento (%)</label>
                        <input class="form-control" name="Model.venta.descuento" id="descuento" value="@Model.venta.descuento" step="1" type="number" />
                        <span asp-validation-for="venta.descuento" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="venta.total" class="control-label"></label>
                        @*<input class="form-control" name="Model.venta.total" id="total" value="@Model.venta.total" type="number" step="0.01" min="0" readonly />*@
                        <input class="form-control" id="total" value="@Model.venta.total" type="number" step="0.01" min="0" readonly />
                        <input type="hidden" name="Model.venta.total" id="totalHidden" />
                    </div>
                </div>
                <div class="col-6">
                    <div class="col-12">
                        <label class="control-label">Productos</label>
                        <div class="row">
                            <div class="col-7">
                                <select id="producto" class="form-select">
                                    @foreach (var p in productos)
                                    {
                                        <option value="@p.Value">@p.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                <input type="number" id="cantidad" class="form-control" placeholder="Cantidad" min="1" value="1" />
                            </div>
                            <div class="col-md-2">
                                <button type="button" class="btn btn-primary" onclick="agregarItem()">Agregar</button>
                            </div>
                        </div>
                    </div>
                    <table class="table table-bordered mt-3" id="tablaItems">
                        <thead>
                            <tr>
                                <th>Producto</th>
                                <th>Precio/Ud.</th>
                                <th>Cantidad</th>
                                <th>Acción</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary my-3">Editar Venta</button>
                <a href="@Url.Action("Index", "Ventas")" class="btn btn-secondary my-3">Volver</a>
            </div>
        </form>
    </div>
</div>
<!-- Script: manejo de cliente dinámico y cálculo de total -->
<script>
    let detalles = [];

    document.addEventListener("DOMContentLoaded", function() {
        let detallesModel = @Html.Raw(detallesJson);
        let productoModel = @Html.Raw(productoJson);

        detallesModel.forEach((detalle, index) => {
            detalles.push({
                facturaId: detalle.factura,
                producto: detalle.producto,
                cantidad: detalle.cantidad,
                nombre: productoModel[index].nombre,
                precio: detalle.precio,
                precioUd: productoModel[index].precio_venta
            });
        });

        renderTabla();
    });
        document.querySelector("form").addEventListener("submit", function () {
        ["subtotal", "isv", "total", "descuento"].forEach(id => {
            const el = document.getElementById(id);
            if (el && el.value) {
                el.value = el.value.toString().replace(',', '.');
            }
        });
    });

    async function agregarItem() {
        const productoId = document.getElementById("producto").value;
        const facturaId = document.getElementById("id_factura").value;
        const productoNombre = document.getElementById("producto").selectedOptions[0].text;
        const cantidad = parseInt(document.getElementById("cantidad").value);

        if (!cantidad || cantidad <= 0) {
            alert("Cantidad inválida");
            return;
        }

        // Esperar a que llegue el precio
        const response = await fetch(`/Ventas/GetPrecioProducto?id=${productoId}`);
        const data = await response.json();
        const precioUd = data.precio_venta;
        const precio = data.precio_venta * cantidad;

        detalles.push({facturaId: facturaId, producto: productoId, cantidad: cantidad, nombre: productoNombre, precio:precio, precioUd:precioUd });
        renderTabla();
        calcularTotales();
    }

    function editarItem(index) {

        let cantidad = parseInt(document.getElementById("cantidad" + index).value);
        detalles[index].cantidad = cantidad;
        renderTabla();
        calcularTotales();
    }

    function eliminarItem(index) {
        detalles.splice(index, 1);
        renderTabla();
        calcularTotales();
    }

    function renderTabla() {
        const tbody = document.querySelector("#tablaItems tbody");
        tbody.innerHTML = "";

        detalles.forEach((item, index) => {
            const row =
            `<tr>
                <td>${item.nombre}</td>
                <td>${item.precioUd}</td>
                <td>
                    <input name="Model.Detalles[${index}].cantidad" id="cantidad${index}" class="form-control" onchange="editarItem(${index})"  value="${item.cantidad}" type="number" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="eliminarItem(${index})">Eliminar</button>
                </td>
                <input type="hidden" name="Model.Detalles[${index}].id_descripcion" value="0" />
                <input type="hidden" name="Model.Detalles[${index}].producto" value="${item.producto}" />
                <input type="hidden" name="Model.Detalles[${index}].precio" value="${item.precio}" />
                <input type="hidden" name="Model.Detalles[${index}].factura" value="${item.facturaId}" />
            </tr>`;
            tbody.innerHTML += row;
        });
    }

    function calcularTotales() {
        let subtotal = detalles.reduce((sum, item) => sum + (item.cantidad * item.precioUd), 0); // Simula precio 100
        let isv = subtotal * 0.15;
        let descuento = parseFloat(document.getElementById("descuento").value) || 0;
        let total = subtotal + isv - ((descuento*0.01)*subtotal);

        document.getElementById("subtotal").value = subtotal.toFixed(2);
        document.getElementById("isv").value = isv.toFixed(2);
        document.getElementById("total").value = total.toFixed(2);

        // Actualiza el hidden con punto decimal
        document.getElementById("totalHidden").value = total.toFixed(2).replace(",", ".");
    }

    document.getElementById("descuento").addEventListener("input", calcularTotales);
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
