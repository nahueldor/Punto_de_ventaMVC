@model Punto_de_ventaMVC.Models.Producto

@{
    ViewData["Title"] = "Editar Producto";
    var tiposList = ViewData["Tipos"] as List<SelectListItem> ?? new List<SelectListItem>();
}

<link rel="stylesheet" href="~/css/styles.css" />

<h1>@ViewData["Title"]</h1>


<div class="row">
    <form asp-action="ModificarProducto" method="post">
        @Html.AntiForgeryToken()
        <input asp-for="id_producto" class="form-control" id="id_producto" hidden />
        <input asp-for="codigo" class="form-control" id="codigo" hidden />

        <div class="container m-0 p-0">
            <div class="row">
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="nombre">Nombre</label>
                        <input asp-for="nombre" class="form-control" id="nombre" required maxlength="50" />
                        <span asp-validation-for="nombre" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="tipo">Tipo</label>
                        <div class="input-group">
                            <select class="form-select" id="selectTipo" required>
                                <option value="" hidden selected>Seleccione un tipo</option>
                                @foreach (var producto in tiposList)
                                {
                                    <option value="@producto.Value">@producto.Text</option>
                                }
                            </select>

                            <input class="form-control d-none" id="inputTipo" maxlength="50" placeholder="Nuevo tipo..." />

                            <button type="button" class="btn btn-outline-dark" id="btnToggleTipo" title="Agregar nuevo tipo">
                                <i class="bi bi-plus-lg"></i>
                            </button>
                        </div>

                        <!-- Campo oculto que se enviará al controlador -->
                        <input asp-for="tipo" class="form-control" id="hiddenTipo" hidden />

                        <span asp-validation-for="tipo" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="precio_compra">Precio de compra</label>
                        <input asp-for="precio_compra" class="form-control" id="precio_compra" type="number" step="0.01" min="0" />
                        <span asp-validation-for="precio_compra" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="precio_venta">Precio de venta</label>
                        <input asp-for="precio_venta" class="form-control" id="precio_venta" type="number" step="0.01" min="0" />
                        <span asp-validation-for="precio_venta" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="minimo">Cantidad mínima</label>
                        <input asp-for="minimo" class="form-control" id="minimo" type="number" min="0" />
                        <span asp-validation-for="minimo" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group my-2">
                        <label for="maximo">Cantidad máxima</label>
                        <input asp-for="maximo" class="form-control" id="maximo" type="number" min="0" />
                        <span asp-validation-for="maximo" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary my-3">Editar Producto</button>
        <a href="@Url.Action("Index", "Producto")" class="btn btn-secondary my-3">Volver</a>
    </form>
</div>
<script>
    const btnToggle = document.getElementById("btnToggleTipo");
    const selectTipo = document.getElementById("selectTipo");
    const inputTipo = document.getElementById("inputTipo");
    const icono = btnToggle.querySelector("i");
    const hiddenTipo = document.getElementById("hiddenTipo");

    document.addEventListener("DOMContentLoaded", () => {


        if (hiddenTipo && hiddenTipo.value) {
            selectTipo.value = hiddenTipo.value;
        }
    });

    btnToggle.addEventListener("click", () => {
        // Si el select está visible → lo ocultamos y mostramos el input
        if (!selectTipo.classList.contains("d-none")) {
            selectTipo.classList.add("d-none");
            inputTipo.classList.remove("d-none");
            inputTipo.focus();

            // Cambia el ícono (de + a lista)
            icono.classList.remove("bi-plus-lg");
            icono.classList.add("bi-list");

            // Limpia el valor del select
            selectTipo.value = "";
        } else {
            // Si el input está visible → lo ocultamos y volvemos al select
            inputTipo.classList.add("d-none");
            selectTipo.classList.remove("d-none");

            // Cambia el ícono (de lista a +)
            icono.classList.remove("bi-list");
            icono.classList.add("bi-plus-lg");

            // Limpia el valor del input
            inputTipo.value = "";
        }
    });

    // Actualizar el valor del input oculto cuando cambie el select
    selectTipo.addEventListener("change", () => {
        hiddenTipo.value = selectTipo.value;
    });

    // Actualizar el valor del input oculto cuando el usuario escriba algo nuevo
    inputTipo.addEventListener("input", () => {
        hiddenTipo.value = inputTipo.value;
    });
</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
